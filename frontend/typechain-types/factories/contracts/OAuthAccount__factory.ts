/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  OAuthAccount,
  OAuthAccountInterface,
} from "../../contracts/OAuthAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "entryPoint_",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldEntryPoint",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newEntryPoint",
        type: "address",
      },
    ],
    name: "EntryPointChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "persona",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mode",
        type: "uint256",
      },
    ],
    name: "PersonaCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "allow",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "deny",
        type: "address[]",
      },
      {
        internalType: "uint112",
        name: "balance",
        type: "uint112",
      },
    ],
    name: "createPersona",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "allow",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "deny",
        type: "address[]",
      },
    ],
    name: "createSharingPersona",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "exec",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "execFromEntryPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "personaAddress",
        type: "address",
      },
    ],
    name: "getPersona",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowTargets",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "denyTargets",
            type: "address[]",
          },
          {
            internalType: "uint112",
            name: "balance",
            type: "uint112",
          },
          {
            internalType: "uint112",
            name: "mode",
            type: "uint112",
          },
        ],
        internalType: "struct OAuthAccount.PersonaData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getPersonaByIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowTargets",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "denyTargets",
            type: "address[]",
          },
          {
            internalType: "uint112",
            name: "balance",
            type: "uint112",
          },
          {
            internalType: "uint112",
            name: "mode",
            type: "uint112",
          },
        ],
        internalType: "struct OAuthAccount.PersonaData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "parseCalldata",
    outputs: [
      {
        internalType: "bytes4",
        name: "funcHash",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "sharingBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalPersona",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newEntryPoint",
        type: "address",
      },
    ],
    name: "updateEntryPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200310c3803806200310c833981810160405281019062000037919062000170565b816000600c6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620001b7565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f382620000c6565b9050919050565b60006200010782620000e6565b9050919050565b6200011981620000fa565b81146200012557600080fd5b50565b60008151905062000139816200010e565b92915050565b6200014a81620000e6565b81146200015657600080fd5b50565b6000815190506200016a816200013f565b92915050565b600080604083850312156200018a5762000189620000c1565b5b60006200019a8582860162000128565b9250506020620001ad8582860162000159565b9150509250929050565b612f4580620001c76000396000f3fe6080604052600436106100f75760003560e01c806380c5c7d01161008a578063affed0e011610059578063affed0e014610339578063b0d691fe14610364578063daea85c51461038f578063f7de6a3a146103b8576100fe565b806380c5c7d0146102915780638da5cb5b146102ba57806398d8f0db146102e5578063a9059cbb14610310576100fe565b80631b71bb6e116100c65780631b71bb6e146101c257806336e9e42d146101eb5780634ba9120f1461022a5780636e02644d14610253576100fe565b80630565bb6714610103578063060bd8141461012c5780630825d1fc146101695780630afea178146101a6576100fe565b366100fe57005b600080fd5b34801561010f57600080fd5b5061012a60048036038101906101259190611cc8565b6103e3565b005b34801561013857600080fd5b50610153600480360381019061014e9190611d3c565b610443565b6040516101609190611ecd565b60405180910390f35b34801561017557600080fd5b50610190600480360381019061018b9190611f4a565b610569565b60405161019d9190611fdc565b60405180910390f35b6101c060048036038101906101bb919061204d565b6105b4565b005b3480156101ce57600080fd5b506101e960048036038101906101e49190611d3c565b61072f565b005b3480156101f757600080fd5b50610212600480360381019061020d9190612223565b610743565b604051610221939291906122b6565b60405180910390f35b34801561023657600080fd5b50610251600480360381019061024c9190612319565b610764565b005b34801561025f57600080fd5b5061027a600480360381019061027591906123c0565b6108e4565b6040516102889291906123ed565b60405180910390f35b34801561029d57600080fd5b506102b860048036038101906102b39190611cc8565b610a2f565b005b3480156102c657600080fd5b506102cf610a8c565b6040516102dc919061241d565b60405180910390f35b3480156102f157600080fd5b506102fa610ab2565b6040516103079190611fdc565b60405180910390f35b34801561031c57600080fd5b5061033760048036038101906103329190612476565b610ab8565b005b34801561034557600080fd5b5061034e610b0e565b60405161035b9190611fdc565b60405180910390f35b34801561037057600080fd5b50610379610b3d565b6040516103869190612515565b60405180910390f35b34801561039b57600080fd5b506103b660048036038101906103b19190611d3c565b610b66565b005b3480156103c457600080fd5b506103cd610c04565b6040516103da9190611fdc565b60405180910390f35b6103ee338585610c11565b61043d848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610ea3565b50505050565b61044b611b56565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506040518060a001604052808260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016104e583600101610f27565b81526020016104f683600301610f27565b81526020018260050160009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16815260200182600501600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16815250915050919050565b6000610573610f48565b61057e858585610fbf565b90506000858060400190610592919061253f565b9050036105a3576105a28561118f565b5b6105ac8261123c565b949350505050565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610640576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063790612625565b60405180910390fd5b6107286040518060a001604052808773ffffffffffffffffffffffffffffffffffffffff168152602001868680806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508152602001848480806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508152602001346dffffffffffffffffffffffffffff16815260200160106dffffffffffffffffffffffffffff168152506112d8565b5050505050565b610737611584565b61074081611631565b50565b60008060006004840151925060248401519150604484015190509193909250565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107eb90612625565b60405180910390fd5b6108dc6040518060a001604052808873ffffffffffffffffffffffffffffffffffffffff168152602001878780806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508152602001858580806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508152602001836dffffffffffffffffffffffffffff16815260200160016dffffffffffffffffffffffffffff168152506112d8565b505050505050565b60006108ee611b56565b60006004848154811061090457610903612645565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050816040518060a001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020016109a884600101610f27565b81526020016109b984600301610f27565b81526020018360050160009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16815260200183600501600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16815250935093505050915091565b610a37610f48565b610a86848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610ea3565b50505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b610ac3338383610c11565b8173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610b09573d6000803e3d6000fd5b505050565b60008060009054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff16905090565b600080600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f19996ea5aede4d14af17b07567999b4c9d512663cfdaa4b01313d0c4af7a6ce760405160405180910390a250565b6000600480549050905090565b6000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000610c6c84836001016116f190919063ffffffff16565b80610c8257506000610c8083600101611721565b145b90506000610c9c85846003016116f190919063ffffffff16565b80610cb257506000610cb084600301611721565b145b9050818015610cbf575080155b80610cde5750818015610cdd57506000610cdb84600301611721565b145b5b80610cfe575080158015610cfd57506000610cfb84600101611721565b145b5b610d3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d34906126c0565b60405180910390fd5b6000479050600184600501600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16148015610d8c57506002548582610d8a919061270f565b115b610dcb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc2906127b5565b60405180910390fd5b8360050160009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168511610e3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3290612847565b60405180910390fd5b848460050160008282829054906101000a90046dffffffffffffffffffffffffffff16610e689190612867565b92506101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff16021790555050505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff168484604051610ecc919061291a565b60006040518083038185875af1925050503d8060008114610f09576040519150601f19603f3d011682016040523d82523d6000602084013e610f0e565b606091505b509150915081610f2057805160208201fd5b5050505050565b60606000610f3783600001611736565b905060608190508092505050919050565b610f50610b3d565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fbd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb49061297d565b60405180910390fd5b565b60008073ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff161461102f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611026906129e9565b60405180910390fd5b600061103a84611792565b905060006110a486806101400190611052919061253f565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050836117c290919063ffffffff16565b905060008060006111068980606001906110be919061253f565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610743565b9250925092506380c5c7d060e01b837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611174576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116b90612a55565b60405180910390fd5b61117f848383610c11565b6000955050505050509392505050565b806020013560008081819054906101000a90046bffffffffffffffffffffffff16809291906111bd90612a8d565b91906101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055506bffffffffffffffffffffffff1614611239576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123090612b0d565b60405180910390fd5b50565b600081146112d55760003373ffffffffffffffffffffffffffffffffffffffff16827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9060405161128c90612b53565b600060405180830381858888f193505050503d80600081146112ca576040519150601f19603f3d011682016040523d82523d6000602084013e6112cf565b606091505b50509050505b50565b600060036000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905081600001518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816080015181600501600e6101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff16021790555060005b8260200151518110156113f9576113e5836020015182815181106113cb576113ca612645565b5b6020026020010151836001016117e990919063ffffffff16565b5080806113f190612b68565b9150506113a4565b5060005b8260400151518110156114525761143e8360400151828151811061142457611423612645565b5b6020026020010151836003016117e990919063ffffffff16565b50808061144a90612b68565b9150506113fd565b5081606001518160050160006101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550600482600001519080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816000015173ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff167f179bb3b693f5bfce4a9f6050c97eb0000d729ad9935efe20d83d76fa12f5fc1583600501600e9054906101000a90046dffffffffffffffffffffffffffff166040516115789190612be1565b60405180910390a35050565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806115f057506115c1610b3d565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61162f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161162690612c48565b60405180910390fd5b565b8073ffffffffffffffffffffffffffffffffffffffff166000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f450909c1478d09248269d4ad4fa8cba61ca3f50faed58c7aedefa51c7f62b83a60405160405180910390a3806000600c6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000611719836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611819565b905092915050565b600061172f8260000161183c565b9050919050565b60608160000180548060200260200160405190810160405280929190818152602001828054801561178657602002820191906000526020600020905b815481526020019060010190808311611772575b50505050509050919050565b6000816040516020016117a59190612ce0565b604051602081830303815290604052805190602001209050919050565b60008060006117d1858561184d565b915091506117de8161189e565b819250505092915050565b6000611811836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611a04565b905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b600080604183510361188e5760008060006020860151925060408601519150606086015160001a905061188287828585611a74565b94509450505050611897565b60006002915091505b9250929050565b600060048111156118b2576118b1612d06565b5b8160048111156118c5576118c4612d06565b5b0315611a0157600160048111156118df576118de612d06565b5b8160048111156118f2576118f1612d06565b5b03611932576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161192990612d81565b60405180910390fd5b6002600481111561194657611945612d06565b5b81600481111561195957611958612d06565b5b03611999576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161199090612ded565b60405180910390fd5b600360048111156119ad576119ac612d06565b5b8160048111156119c0576119bf612d06565b5b03611a00576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119f790612e7f565b60405180910390fd5b5b50565b6000611a108383611819565b611a69578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050611a6e565b600090505b92915050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c1115611aaf576000600391509150611b4d565b600060018787878760405160008152602001604052604051611ad49493929190612eca565b6020604051602081039080840390855afa158015611af6573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611b4457600060019250925050611b4d565b80600092509250505b94509492505050565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016060815260200160006dffffffffffffffffffffffffffff16815260200160006dffffffffffffffffffffffffffff1681525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611bfa82611bcf565b9050919050565b611c0a81611bef565b8114611c1557600080fd5b50565b600081359050611c2781611c01565b92915050565b6000819050919050565b611c4081611c2d565b8114611c4b57600080fd5b50565b600081359050611c5d81611c37565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611c8857611c87611c63565b5b8235905067ffffffffffffffff811115611ca557611ca4611c68565b5b602083019150836001820283011115611cc157611cc0611c6d565b5b9250929050565b60008060008060608587031215611ce257611ce1611bc5565b5b6000611cf087828801611c18565b9450506020611d0187828801611c4e565b935050604085013567ffffffffffffffff811115611d2257611d21611bca565b5b611d2e87828801611c72565b925092505092959194509250565b600060208284031215611d5257611d51611bc5565b5b6000611d6084828501611c18565b91505092915050565b611d7281611bef565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000611db08383611d69565b60208301905092915050565b6000602082019050919050565b6000611dd482611d78565b611dde8185611d83565b9350611de983611d94565b8060005b83811015611e1a578151611e018882611da4565b9750611e0c83611dbc565b925050600181019050611ded565b5085935050505092915050565b60006dffffffffffffffffffffffffffff82169050919050565b611e4a81611e27565b82525050565b600060a083016000830151611e686000860182611d69565b5060208301518482036020860152611e808282611dc9565b91505060408301518482036040860152611e9a8282611dc9565b9150506060830151611eaf6060860182611e41565b506080830151611ec26080860182611e41565b508091505092915050565b60006020820190508181036000830152611ee78184611e50565b905092915050565b600080fd5b60006101608284031215611f0b57611f0a611eef565b5b81905092915050565b6000819050919050565b611f2781611f14565b8114611f3257600080fd5b50565b600081359050611f4481611f1e565b92915050565b60008060008060808587031215611f6457611f63611bc5565b5b600085013567ffffffffffffffff811115611f8257611f81611bca565b5b611f8e87828801611ef4565b9450506020611f9f87828801611f35565b9350506040611fb087828801611c18565b9250506060611fc187828801611c4e565b91505092959194509250565b611fd681611c2d565b82525050565b6000602082019050611ff16000830184611fcd565b92915050565b60008083601f84011261200d5761200c611c63565b5b8235905067ffffffffffffffff81111561202a57612029611c68565b5b60208301915083602082028301111561204657612045611c6d565b5b9250929050565b60008060008060006060868803121561206957612068611bc5565b5b600061207788828901611c18565b955050602086013567ffffffffffffffff81111561209857612097611bca565b5b6120a488828901611ff7565b9450945050604086013567ffffffffffffffff8111156120c7576120c6611bca565b5b6120d388828901611ff7565b92509250509295509295909350565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612130826120e7565b810181811067ffffffffffffffff8211171561214f5761214e6120f8565b5b80604052505050565b6000612162611bbb565b905061216e8282612127565b919050565b600067ffffffffffffffff82111561218e5761218d6120f8565b5b612197826120e7565b9050602081019050919050565b82818337600083830152505050565b60006121c66121c184612173565b612158565b9050828152602081018484840111156121e2576121e16120e2565b5b6121ed8482856121a4565b509392505050565b600082601f83011261220a57612209611c63565b5b813561221a8482602086016121b3565b91505092915050565b60006020828403121561223957612238611bc5565b5b600082013567ffffffffffffffff81111561225757612256611bca565b5b612263848285016121f5565b91505092915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6122a18161226c565b82525050565b6122b081611bef565b82525050565b60006060820190506122cb6000830186612298565b6122d860208301856122a7565b6122e56040830184611fcd565b949350505050565b6122f681611e27565b811461230157600080fd5b50565b600081359050612313816122ed565b92915050565b6000806000806000806080878903121561233657612335611bc5565b5b600061234489828a01611c18565b965050602087013567ffffffffffffffff81111561236557612364611bca565b5b61237189828a01611ff7565b9550955050604087013567ffffffffffffffff81111561239457612393611bca565b5b6123a089828a01611ff7565b935093505060606123b389828a01612304565b9150509295509295509295565b6000602082840312156123d6576123d5611bc5565b5b60006123e484828501611c4e565b91505092915050565b600060408201905061240260008301856122a7565b81810360208301526124148184611e50565b90509392505050565b600060208201905061243260008301846122a7565b92915050565b600061244382611bcf565b9050919050565b61245381612438565b811461245e57600080fd5b50565b6000813590506124708161244a565b92915050565b6000806040838503121561248d5761248c611bc5565b5b600061249b85828601612461565b92505060206124ac85828601611c4e565b9150509250929050565b6000819050919050565b60006124db6124d66124d184611bcf565b6124b6565b611bcf565b9050919050565b60006124ed826124c0565b9050919050565b60006124ff826124e2565b9050919050565b61250f816124f4565b82525050565b600060208201905061252a6000830184612506565b92915050565b600080fd5b600080fd5b600080fd5b6000808335600160200384360303811261255c5761255b612530565b5b80840192508235915067ffffffffffffffff82111561257e5761257d612535565b5b60208301925060018202360383131561259a5761259961253a565b5b509250929050565b600082825260208201905092915050565b7f6163636f756e743a206f6e6c79206f776e65722063616e20637265617465207060008201527f6572736f6e610000000000000000000000000000000000000000000000000000602082015250565b600061260f6026836125a2565b915061261a826125b3565b604082019050919050565b6000602082019050818103600083015261263e81612602565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f6163636f756e743a2077726f6e67207369676e61747572650000000000000000600082015250565b60006126aa6018836125a2565b91506126b582612674565b602082019050919050565b600060208201905081810360008301526126d98161269d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061271a82611c2d565b915061272583611c2d565b925082820390508181111561273d5761273c6126e0565b5b92915050565b7f6163636f756e743a20706572736f6e616c2062616c616e6365206973206e6f7460008201527f20656e6f75677468000000000000000000000000000000000000000000000000602082015250565b600061279f6028836125a2565b91506127aa82612743565b604082019050919050565b600060208201905081810360008301526127ce81612792565b9050919050565b7f6163636f756e743a20706572736f6e612062616c616e6365206973206e6f742060008201527f656e6f7567746800000000000000000000000000000000000000000000000000602082015250565b60006128316027836125a2565b915061283c826127d5565b604082019050919050565b6000602082019050818103600083015261286081612824565b9050919050565b600061287282611e27565b915061287d83611e27565b925082820390506dffffffffffffffffffffffffffff8111156128a3576128a26126e0565b5b92915050565b600081519050919050565b600081905092915050565b60005b838110156128dd5780820151818401526020810190506128c2565b60008484015250505050565b60006128f4826128a9565b6128fe81856128b4565b935061290e8185602086016128bf565b80840191505092915050565b600061292682846128e9565b915081905092915050565b7f6163636f756e743a206e6f742066726f6d20456e747279506f696e7400000000600082015250565b6000612967601c836125a2565b915061297282612931565b602082019050919050565b600060208201905081810360008301526129968161295a565b9050919050565b7f6163636f756e743a207478206f726967696e206973206e6f74207a65726f0000600082015250565b60006129d3601e836125a2565b91506129de8261299d565b602082019050919050565b60006020820190508181036000830152612a02816129c6565b9050919050565b7f6163636f756e743a20696e76616c69642066756e634861736800000000000000600082015250565b6000612a3f6019836125a2565b9150612a4a82612a09565b602082019050919050565b60006020820190508181036000830152612a6e81612a32565b9050919050565b60006bffffffffffffffffffffffff82169050919050565b6000612a9882612a75565b91506bffffffffffffffffffffffff8203612ab657612ab56126e0565b5b600182019050919050565b7f6163636f756e743a20696e76616c6964206e6f6e636500000000000000000000600082015250565b6000612af76016836125a2565b9150612b0282612ac1565b602082019050919050565b60006020820190508181036000830152612b2681612aea565b9050919050565b50565b6000612b3d6000836128b4565b9150612b4882612b2d565b600082019050919050565b6000612b5e82612b30565b9150819050919050565b6000612b7382611c2d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612ba557612ba46126e0565b5b600182019050919050565b6000612bcb612bc6612bc184611e27565b6124b6565b611c2d565b9050919050565b612bdb81612bb0565b82525050565b6000602082019050612bf66000830184612bd2565b92915050565b7f6e6f742061646d696e0000000000000000000000000000000000000000000000600082015250565b6000612c326009836125a2565b9150612c3d82612bfc565b602082019050919050565b60006020820190508181036000830152612c6181612c25565b9050919050565b600081905092915050565b7f19457468657265756d205369676e6564204d6573736167653a0a333200000000600082015250565b6000612ca9601c83612c68565b9150612cb482612c73565b601c82019050919050565b6000819050919050565b612cda612cd582611f14565b612cbf565b82525050565b6000612ceb82612c9c565b9150612cf78284612cc9565b60208201915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b6000612d6b6018836125a2565b9150612d7682612d35565b602082019050919050565b60006020820190508181036000830152612d9a81612d5e565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b6000612dd7601f836125a2565b9150612de282612da1565b602082019050919050565b60006020820190508181036000830152612e0681612dca565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b6000612e696022836125a2565b9150612e7482612e0d565b604082019050919050565b60006020820190508181036000830152612e9881612e5c565b9050919050565b612ea881611f14565b82525050565b600060ff82169050919050565b612ec481612eae565b82525050565b6000608082019050612edf6000830187612e9f565b612eec6020830186612ebb565b612ef96040830185612e9f565b612f066060830184612e9f565b9594505050505056fea2646970667358221220a1942dad06b16af9b6a7099ee43e49c11629f750150656787f3aaf0cbda2f63664736f6c63430008110033";

type OAuthAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OAuthAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OAuthAccount__factory extends ContractFactory {
  constructor(...args: OAuthAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    entryPoint_: PromiseOrValue<string>,
    owner_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OAuthAccount> {
    return super.deploy(
      entryPoint_,
      owner_,
      overrides || {}
    ) as Promise<OAuthAccount>;
  }
  override getDeployTransaction(
    entryPoint_: PromiseOrValue<string>,
    owner_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(entryPoint_, owner_, overrides || {});
  }
  override attach(address: string): OAuthAccount {
    return super.attach(address) as OAuthAccount;
  }
  override connect(signer: Signer): OAuthAccount__factory {
    return super.connect(signer) as OAuthAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OAuthAccountInterface {
    return new utils.Interface(_abi) as OAuthAccountInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OAuthAccount {
    return new Contract(address, _abi, signerOrProvider) as OAuthAccount;
  }
}
